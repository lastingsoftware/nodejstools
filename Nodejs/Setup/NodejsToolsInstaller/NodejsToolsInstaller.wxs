<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
    <?include NodejsToolsInstallerVars.wxi ?>

    <Product Id="*" Name="$(var.ProductName)" Language="1033" Version="$(var.MsiVersion)" Manufacturer="Microsoft Corporation" UpgradeCode="$(var.InstallerUpgradeGuid)">
        <Package InstallerVersion="500" Compressed="yes" InstallScope="perMachine"  />
        <MajorUpgrade AllowDowngrades="no" AllowSameVersionUpgrades="yes"
                      DowngradeErrorMessage="A newer version of [ProductName] is already installed." />

        <MediaTemplate EmbedCab="yes" CompressionLevel="high" />

        <!-- Properties that we need to search for -->

        <!-- Detect other installed software (Node.js, HPC pack) and set 
             the install level of the feature to 2 if they're not installed.  This will
             cause them to be unselected by default.  -->
        <Property Id="INSTALLLEVEL" Value="1"/>
        
        <Property Id="ApplicationFolderName" Value="$(var.ProductName)" />
        <Icon Id="AddRemoveProgramsIcon" SourceFile="NodeJS.ico"/>
        <Property Id="ARPPRODUCTICON">AddRemoveProgramsIcon</Property>

        <!-- Conditions for install -->
        <PropertyRef Id="VS_PRERELEASE"/>
        <Condition Message="!(loc.VSPrerelease)"> NOT VS_PRERELEASE OR Installed </Condition>
        
        <PropertyRef Id="NETFRAMEWORK45"/>
        <Condition Message="!(loc.NetFx45NotInstalled)"> NETFRAMEWORK45 OR Installed </Condition>

        <PropertyRef Id="VSINSTALLPATH"/>
        <PropertyRef Id="VWDINSTALLPATH"/>
        <PropertyRef Id="DEVENV_PATH"/>
        <PropertyRef Id="VWDEXPRESS_PATH"/>

        <!-- At least one installation path means some version is installed. -->
        <Condition Message="!(loc.NoInstallPath)">
            VSINSTALLPATH OR VWDINSTALLPATH OR Installed
        </Condition>
        <!-- Skip this message if VWD's install path was not found -->
        <Condition Message="!(loc.VWDInstallPathButNoExe)">
            DEVENV_PATH OR VWDEXPRESS_PATH OR NOT VWDINSTALLPATH OR Installed
        </Condition>
        <!-- Always show this message if there are no suitable versions -->
        <Condition Message="!(loc.NoExePath)">
            DEVENV_PATH OR VWDEXPRESS_PATH OR Installed
        </Condition>

        <!-- This location is the directory that NodejsTools.msm will install into.
             We use it to reference some installed files. -->
        <DirectoryRef Id="Dir_VSExtensions">
            <Directory Id="Dir_NTVSInstallLocationParent" Name="Node.js Tools for Visual Studio">
                <Directory Id="Dir_NTVSInstallLocation" Name="$(var.ReleaseVersion)" />
            </Directory>
        </DirectoryRef>

        <PropertyRef Id="VSLAUNCHER"/>

        <DirectoryRef Id="TARGETDIR">
            <Directory Id="ProgramMenuFolder">
                <Directory Id="Dir_StartMenu" Name="!(loc.ProductName) !(loc.ForVisualStudio)">
                    <Component Id="Comp_ProgramMenuFolder" Guid="$(var.Comp_ProgramMenuFolder)">
                        <RemoveFolder Id='DeleteDir_StartMenu' Directory='Dir_StartMenu' On='uninstall'/>
                        <RegistryKey Root="HKMU" Key="Software\Microsoft\NodeJSTools\$(var.VSTargetVersion)">
                            <RegistryValue Type="string" Name="InstallDir" Value="[Dir_NTVSInstallLocation]" KeyPath="yes"/>
                        </RegistryKey>
                        <util:RestartResource Path="[DEVENV_PATH]" />
                        <util:RestartResource Path="[VWDEXPRESS_PATH]" />
                    </Component>
                </Directory>
            </Directory>
        </DirectoryRef>
        
        <DirectoryRef Id="Dir_NTVSInstallLocation">
            <!-- Double click to open Node.js projects with Visual Studio -->
            <Component Id="Comp_NjsProgRegistration" DiskId="1" Guid="$(var.Comp_NjsProjRegistrationGuid)">
                <RegistryValue Root='HKCR' Key='.njsproj' Type='string' Name='PerceivedType' Value='text' />
                <RegistryValue Root='HKCR' Key='VisualStudio.Launcher.njsproj.$(var.VSTargetVersion)\DefaultIcon' Type='string' Value='[Dir_NTVSInstallLocation]\NodejsProject.ico' />

                <ProgId Id="VisualStudio.Launcher.njsproj.$(var.VSTargetVersion)" Description="Node.js Project">
                    <Extension Id="njsproj" ContentType="text/plain">
                        <Verb Id="Open" Command="Open" TargetProperty="VSLAUNCHER" Argument="&quot;%1&quot;"/>
                    </Extension>
                </ProgId>
            </Component>

            <Component Id="Comp_ProfilingRegistration" DiskId="1" Guid="$(var.Comp_NjsPerfRegistrationGuid)">
                <RegistryValue Root='HKCR' Key='.njsperf' Type='string' Name='PerceivedType' Value='text' />
                <RegistryValue Root='HKCR' Key='VisualStudio.Launcher.njsperf.$(var.VSTargetVersion)\DefaultIcon' Type='string' Value='[Dir_NTVSInstallLocation]\NodejsProject.ico' />

                <ProgId Id="VisualStudio.Launcher.njsperf.$(var.VSTargetVersion)" Description="Node.js Performance File">
                    <Extension Id="njsperf" ContentType="text/plain">
                        <Verb Id="Open" Command="Open" TargetProperty="VSLAUNCHER" Argument="&quot;%1&quot;"/>
                    </Extension>
                </ProgId>
            </Component>

            <Merge Id="Merge_InteractiveWindow" Language="1033" SourceFile="InteractiveWindow.msm" DiskId="1">
                <?foreach key in VS;VWD?>
                <ConfigurationData Name="Config_$(var.key)ExtensionsParent" Value="Dir_$(var.key)Extensions" />
                <ConfigurationData Name="Config_$(var.key)TemplatesParent" Value="Dir_$(var.key)Templates"/>
                <?endforeach?>
                <ConfigurationData Name="Config_MSBuildLocation" Value="Dir_MSBuildTargets"/>
            </Merge>
            <Merge Id="Merge_Profiling" Language="1033" SourceFile="Profiling.msm" DiskId="1">
                <?foreach key in VS;VWD?>
                <ConfigurationData Name="Config_$(var.key)ExtensionsParent" Value="Dir_$(var.key)Extensions" />
                <ConfigurationData Name="Config_$(var.key)TemplatesParent" Value="Dir_$(var.key)Templates"/>
                <?endforeach?>
                <ConfigurationData Name="Config_MSBuildLocation" Value="Dir_MSBuildTargets"/>
            </Merge>
            <Merge Id="Merge_NodejsTools" Language="1033" SourceFile="NodejsTools.msm" DiskId="1">
                <?foreach key in VS;VWD?>
                <ConfigurationData Name="Config_$(var.key)ExtensionsParent" Value="Dir_$(var.key)Extensions" />
                <ConfigurationData Name="Config_$(var.key)TemplatesParent" Value="Dir_$(var.key)Templates"/>
                <?endforeach?>
                <ConfigurationData Name="Config_MSBuildLocation" Value="Dir_MSBuildTargets"/>
            </Merge>
        </DirectoryRef>

        <!-- Main visual studio support feature, requires Visual Studio. -->
        <Feature Id="ProductFeature" Title="$(var.ProductName)" Description="!(loc.ProductDescription)"
                 Display="expand" Level="1" AllowAdvertise="no" Absent="disallow"  >

            <ComponentRef Id="Comp_ProgramMenuFolder" />
            
            <MergeRef Id="Merge_NodejsTools"/>
            <MergeRef Id="Merge_InteractiveWindow"/>
            <MergeRef Id="Merge_Profiling" />

            <Feature Id="Feature_VsNjsFile" AllowAdvertise="no" Level="1" Title="Register file associations" Description="Associates Node.js projects and source files with Visual Studio (existing source file associations are not modified).">
                <ComponentRef Id="Comp_NjsProgRegistration"/>
                <ComponentRef Id="Comp_ProfilingRegistration"/>
            </Feature>
        </Feature>
        
        <!-- Execute devenv /setup -->
        <CustomAction Id="DevEnvSetup" Property="DEVENV_PATH" ExeCommand="/setup" Execute="deferred" Return="check" Impersonate="no" />
        <CustomAction Id="DevEnvSetup_Rollback" Property="DEVENV_PATH" ExeCommand="/setup" Execute="rollback" Return="check" Impersonate="no" />
        <CustomAction Id="VWDExpressSetup" Property="VWDEXPRESS_PATH" ExeCommand="/setup" Execute="deferred" Return="check" Impersonate="no" />
        <CustomAction Id="VWDExpressSetup_Rollback" Property="VWDEXPRESS_PATH" ExeCommand="/setup" Execute="rollback" Return="check" Impersonate="no" />

        <InstallExecuteSequence>
            <Custom Action="DevEnvSetup_Rollback" Before="DevEnvSetup" Overridable="yes">NOT SKIP_DEVENV_SETUP AND DEVENV_PATH</Custom>
            <Custom Action="DevEnvSetup" Before="InstallFinalize" Overridable="yes">NOT SKIP_DEVENV_SETUP AND DEVENV_PATH</Custom>
            <Custom Action="VWDExpressSetup_Rollback" Before="VWDExpressSetup" Overridable="yes">NOT SKIP_DEVENV_SETUP AND VWDEXPRESS_PATH</Custom>
            <Custom Action="VWDExpressSetup" Before="InstallFinalize" Overridable="yes">NOT SKIP_DEVENV_SETUP AND VWDEXPRESS_PATH</Custom>
        </InstallExecuteSequence>
        <InstallUISequence>
            <Show Dialog="CustomAdvancedWelcomeEulaDlg" Before="FindRelatedProducts">NOT Installed</Show>
            <Show Dialog="CustomFeaturesDlg" After="CostFinalize">NOT Installed AND EasyInstall=0</Show>
            <Show Dialog="CustomExitDialog" OnExit="success" />
        </InstallUISequence>
        
        <AdminUISequence>
          <Show Dialog="CustomExitDialog" OnExit="success" />
        </AdminUISequence>

        <!-- Include the UI from UI.wxs -->
        <UIRef Id="UI_Default"/>
        
    </Product>
</Wix>